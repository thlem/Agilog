{"version":3,"sources":["client/app/agilogClient.js","client/app/accountClient/AccountClientController.js","client/app/accountClient/AccountClientDirective.js","client/app/accountClient/AccountClientService.js","client/app/authenticationClient/AuthenticationClientController.js","client/app/authenticationClient/AuthenticationClientDirective.js","client/app/authenticationClient/AuthenticationClientService.js","client/app/notificationClient/NotificationClientController.js","client/app/notificationClient/NotificationClientDirective.js","client/app/notificationClient/NotificationClientService.js","client/app/rootClient/CommonClientDirective.js","client/app/rootClient/RootClientController.js"],"names":["agilogClient","angular","module","config","$routeProvider","$httpProvider","when","templateUrl","public","controller","otherwise","redirectTo","interceptors","push","$q","$location","$localStorage","$rootScope","NotificationClientService","request","headers","user","Authorization","token","responseError","response","deferred","defer","status","root","addToErrorMessages","data","message","console","log","url","reject","resolve","promise","run","loading","loadingQueue","pageTitle","$scope","directive","AccountClientService","AuthenticationClientService","scope","element","on","startLoading","usrPasswordVal","$","this","find","val","usrPasswordConfirmVal","doSubmit","undefined","focus","arrayOfUserData","usrLogin","usrPassword","submitAccountLoginInfoForm","addOrUpdateUserInLocalStorage","addToSuccessMessages","endLoading","service","$http","callback","post","then","logout","removeUserFromLocalStorage","registerForm","usrLoginInput","usrPasswordInput","removeClass","$valid","usrPasswordConfirmInput","password","confirmPassword","usrPasswordConfirmLabel","siblings","usrPasswordLabel","addClass","$apply","usrMail","usrFirstName","usrLastName","submitRegisterForm","usrMailLabel","text","focusIsSet","$error","required","usrPasswordConfirm","usrMailInput","append","loginForm","submitLoginForm","get","notification","errorMessages","successMessages","$watch","getErrorMessages","getSuccessMessages","restrict","hide","$timeout","error","equals","i","length","cancel","splice","currentError","timeout","currentSuccess","removeAllErrorMessages","removeAllSuccessMessages","menuIco","hiddenMenuItems","topPosition","height","css","top","input","label"],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"public\\js\\app.min.js","sourcesContent":["'use strict'\r\n\r\nvar agilogClient = angular.module(\"agilogClient\", [\"ngResource\", \"ngRoute\", \"ngStorage\"]);\r\n\r\nagilogClient.config([\"$routeProvider\", \"$httpProvider\", function ($routeProvider, $httpProvider){\r\n\t$routeProvider\r\n\t.when(\"/\", {\r\n\t\ttemplateUrl: \"partials/accueil.html\",\r\n\t\tpublic: true\r\n\t})\r\n\t.when(\"/login\", {\r\n\t\ttemplateUrl: \"partials/loginForm.html\",\r\n\t\tcontroller: \"AuthenticationLoginClientController\",\r\n\t\tpublic: true\r\n\t})\r\n\t.when(\"/register\", {\r\n\t\ttemplateUrl: \"partials/registerForm.html\",\r\n\t\tcontroller: \"AuthenticationRegisterClientController\",\r\n\t\tpublic: true\r\n\t})\r\n    .when(\"/account\", {\r\n        templateUrl: \"partials/account.html\",\r\n        controller: \"AccountClientController\"\r\n    })\r\n\t.otherwise({\r\n        redirectTo: \"/\"\r\n    });\r\n\r\n\t/**\r\n     * Création d'un interceptor : \r\n     * Lorsqu'une requête est émise (via $http) on ajoute au header le token utilisateur\r\n     * Lorsqu'une réponse est reçu (via $http) on vérifie si elle est en erreur et traite le code retour\r\n     */\r\n    $httpProvider.interceptors.push(['$q', '$location', '$localStorage', '$rootScope', 'NotificationClientService',\r\n    function($q, $location, $localStorage, $rootScope, NotificationClientService) {\r\n        return {\r\n            // Ajout du token au header de la request\r\n            'request': function (config) {\r\n                config.headers = config.headers || {};\r\n                if ($localStorage.user) {\r\n                    config.headers.Authorization = 'Bearer ' + $localStorage.user.token;\r\n                }\r\n                return config;\r\n            },\r\n            // Traitement des réponses en erreur\r\n            'responseError': function(response) {\r\n                var deferred = $q.defer();\r\n                // Traitement des cas particuliers pour les codes erreur ci-dessous\r\n                switch(response.status){\r\n                    case 401:\r\n                        // Si l'utilisateur tente d'accéder à une ressource sans être connecté\r\n                        // On s'assure qu'il n'est pas présent dans le local storage\r\n                        // et on le redirige vers l'accueil\r\n                        delete $localStorage.user;\r\n                        delete $rootScope.root.user;\r\n                        NotificationClientService.addToErrorMessages(response.data.message);\r\n                        console.log(response);\r\n                        $location.url('/');\r\n                        return $q.reject(response);\r\n                    break;\r\n                    case 403:\r\n                        // si l'utilisateur tente d'accéder à une ressource dont il n'a pas les droits\r\n                        // On le redirige vers une page informative\r\n                        NotificationClientService.addToErrorMessages(response.data.message);\r\n                        return $q.reject(response);\r\n                    break;\r\n                    default:\r\n                        // Si l'erreur n'est pas cité ci-dessus on indique à la response\r\n                        // de continuer son chemin nominal\r\n                        deferred.resolve(response);\r\n                        return deferred.promise;\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n    }]);\r\n\r\n}]);\r\n\r\nagilogClient.run([\"$rootScope\", \"$localStorage\", function($rootScope, $localStorage){\r\n \t$rootScope.root = {};\r\n\t$rootScope.root.loading = null;\r\n    $rootScope.root.loadingQueue = 0;\r\n    $rootScope.root.pageTitle = \"Accueil\";\r\n\r\n    // Si le local-storage contient un utilisateur\r\n    if($localStorage.user){\r\n        // On le rajoute au scope globale\r\n        $rootScope.root.user = $localStorage.user;\r\n    }\r\n}]);","agilogClient.controller(\"AccountClientController\", [\"$scope\", \"$rootScope\",\r\n\tfunction($scope, $rootScope){\r\n\t\t$rootScope.root.pageTitle = \"Gestion de votre compte utilisateur\";\r\n\t\t$scope.user = $rootScope.root.user;\r\n\t}\r\n]);","agilogClient.directive(\"usrAccountLoginDir\", [\"NotificationClientService\", \"AccountClientService\", \"AuthenticationClientService\", \"$location\", \"$rootScope\",\r\nfunction(NotificationClientService, AccountClientService, AuthenticationClientService, $location, $rootScope){\r\n\t\treturn function(scope, element) {\r\n\r\n\t\t\telement.on(\"submit\", function(){\r\n\t\t\t\tconsole.log(\"ok\");\r\n\t\t\t\t$rootScope.startLoading();\r\n\r\n\t\t\t\tvar usrLoginVal = $(this).find(\"#usrLogin\").val();\r\n\t\t\t\tvar usrPasswordVal = $(this).find(\"#usrPassword\").val();\r\n\t\t\t\tvar usrPasswordConfirmVal = $(this).find(\"#usrPasswordConfirm\").val();\r\n\r\n\t\t\t\tvar doSubmit = true;\r\n\r\n\t\t\t\tif(usrPasswordVal !== undefined && usrPasswordVal !== \"\"){\r\n\t\t\t\t\tif(usrPasswordConfirmVal !== undefined && usrPasswordVal !== usrPasswordConfirmVal){\r\n\t\t\t\t\t\tdoSubmit = false;\r\n\t\t\t\t\t\t$(this).find(\"#usrPassword\").focus();\r\n\t\t\t\t\t\tNotificationClientService.addToErrorMessages(\"Les mots de passe saisis ne sont pas identiques\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(doSubmit){\r\n\t\t\t\t\tvar arrayOfUserData = {\r\n\t\t\t\t\t\tusrLogin:$(this).find(\"#usrLogin\").val(),\r\n\t\t\t\t\t\tusrPassword:$(this).find(\"#usrPassword\").val()\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tAccountClientService.submitAccountLoginInfoForm(arrayOfUserData, function(message, user){\r\n\t\t\t\t\t\tif(user){\r\n\t\t\t\t\t\t\tAuthenticationClientService.addOrUpdateUserInLocalStorage(user);\r\n\t\t\t\t\t\t\tNotificationClientService.addToSuccessMessages(message);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tNotificationClientService.addToErrorMessages(message);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$rootScope.endLoading();\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\r\n\t\t}\r\n}]);","agilogClient.service(\"AccountClientService\", ['$localStorage', '$rootScope', \"$http\",\r\nfunction($localStorage, $rootScope, $http){\r\n\r\n\tthis.submitAccountLoginInfoForm = function(arrayOfUserData, callback){\r\n\t\t$http.post(\"/account/update/logininfo\", {\r\n\t\t\tusrLogin:     arrayOfUserData.usrLogin,\r\n\t\t\tusrPassword:  arrayOfUserData.usrPassword\r\n\t\t})\r\n\t\t.then(function(response){\r\n\t\t\tcallback(response.data.message, response.data.user);\r\n\t\t});\r\n\t};\r\n\r\n}]);","agilogClient.controller(\"AuthenticationRegisterClientController\", [\"$scope\", \"$location\", \"$rootScope\", \"AuthenticationClientService\",\r\n\tfunction($scope, $location, $rootScope, AuthenticationClientService){\r\n\t\t$scope.user = {};\r\n\r\n}]);\r\n\r\nagilogClient.controller(\"AuthenticationLoginClientController\", [\"$scope\", \"$location\", \"$rootScope\", \"AuthenticationClientService\",\r\n\tfunction($scope, $location, $rootScope, AuthenticationClientService){\r\n\t\t$scope.user = {};\r\n\r\n}]);\r\n\r\nagilogClient.controller(\"AuthenticationLogoutClientController\", [\"$scope\", \"$location\", \"$rootScope\", \"AuthenticationClientService\", \"NotificationClientService\",\r\n\tfunction($scope, $location, $rootScope, AuthenticationClientService, NotificationClientService){\r\n\r\n\t$scope.logout = function(){\r\n\t\t$rootScope.startLoading();\r\n\t\tAuthenticationClientService.logout()\r\n\t\t.then(function(response){\r\n\t\t\tNotificationClientService.addToSuccessMessages(response.data.message);\r\n\t\t\tAuthenticationClientService.removeUserFromLocalStorage();\r\n\t\t\t$rootScope.endLoading();\r\n\t\t\t$location.url(\"/\");\r\n\t\t});\r\n\t};\r\n\r\n}]);","agilogClient.directive(\"registerFormDir\", [\"NotificationClientService\", \"AuthenticationClientService\", \"$location\", \"$rootScope\",\r\nfunction(NotificationClientService, AuthenticationClientService, $location, $rootScope){\r\n\r\n\treturn function(scope, element) {\r\n\r\n\t\tif($rootScope.root.user){\r\n\t\t\t$location.url('/');\r\n\t\t}\r\n\r\n\t\tvar registerForm = $(element[0]);\r\n\t\tvar usrLoginInput = $(registerForm).find(\"#usrLogin\");\r\n\t\tif(usrLoginInput.val()){\r\n\t\t\tvar usrPasswordInput = $(registerForm).find(\"#usrPassword\");\r\n\t\t\tusrPasswordInput.focus();\r\n\t\t}\r\n\t\telse{\r\n\t\t\tusrLoginInput.focus();\r\n\t\t}\r\n\r\n\t\telement.on(\"submit\", function(){\r\n\t\t\t$rootScope.startLoading();\r\n\r\n\t\t\t$(\".inputError\").removeClass(\"inputError\");\r\n\r\n\t\t\tif(!scope.registerForm.$valid){\r\n\t\t\t\tvar usrMailLabel = $(registerForm).find(\"label[for='usrMail']\");\r\n\t\t\t\tusrMailLabel.text(\"Mail\");\r\n\t\t\t\tvar focusIsSet = false;\r\n\t\t\t\tif(scope.registerForm.usrLogin.$error.required){\r\n\t\t\t\t\tvar usrLoginInput = $(registerForm).find(\"#usrLogin\");\r\n\r\n\t\t\t\t\tusrLoginInput.addClass(\"inputError\");\r\n\t\t\t\t\tfocusIsSet = true;\r\n\t\t\t\t\tusrLoginInput.focus();\r\n\t\t\t\t}\r\n\t\t\t\tif(scope.registerForm.usrPassword.$error.required){\r\n\t\t\t\t\tvar usrPasswordInput = $(registerForm).find(\"#usrPassword\");\r\n\r\n\t\t\t\t\tusrPasswordInput.addClass(\"inputError\");\r\n\t\t\t\t\tif(!focusIsSet){\r\n\t\t\t\t\t\tfocusIsSet = true;\r\n\t\t\t\t\t\tusrPasswordInput.focus();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(scope.registerForm.usrPasswordConfirm.$error.required){\r\n\t\t\t\t\tvar usrPasswordConfirmInput = $(registerForm).find(\"#usrPasswordConfirm\");\r\n\r\n\t\t\t\t\tusrPasswordConfirmInput.addClass(\"inputError\");\r\n\t\t\t\t\tif(!focusIsSet){\r\n\t\t\t\t\t\tfocusIsSet = true;\r\n\t\t\t\t\t\tusrPasswordConfirmInput.focus();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(scope.registerForm.usrMail.$error){\r\n\t\t\t\t\tvar usrMailInput = $(registerForm).find(\"#usrMail\");\r\n\t\t\t\t\tif(usrMailInput.val()){\r\n\t\t\t\t\t\tvar usrMailLabel = $(registerForm).find(\"label[for='usrMail']\");\r\n\r\n\t\t\t\t\t\tusrMailInput.addClass(\"inputError\");\r\n\t\t\t\t\t\tusrMailLabel.append(\" E-mail invalide (example@examp.ex)\");\r\n\t\t\t\t\t\tif(!focusIsSet){\r\n\t\t\t\t\t\t\tfocusIsSet = true;\r\n\t\t\t\t\t\t\tusrMailInput.focus();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t$rootScope.endLoading();\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tvar usrPasswordConfirmInput = $(registerForm).find(\"#usrPasswordConfirm\");\r\n\t\t\t\tvar usrPasswordInput = $(registerForm).find(\"#usrPassword\");\r\n\r\n\t\t\t\tvar password = usrPasswordInput.val();\r\n\t\t\t\tvar confirmPassword = usrPasswordConfirmInput.val();\r\n\r\n\t\t\t\tif(password !== confirmPassword){\r\n\r\n\t\t\t\t\tNotificationClientService.addToErrorMessages(\"Les mots de passe saisis ne sont pas identiques\");\r\n\t\t\t\t\tvar usrPasswordConfirmLabel = $(usrPasswordConfirmInput.siblings()[0]);\r\n\t\t\t\t\tvar usrPasswordLabel = $(usrPasswordInput.siblings()[0]);\r\n\r\n\t\t\t\t\tusrPasswordConfirmLabel.removeClass(\"labelOnBottom\");\r\n\t\t\t\t\tusrPasswordLabel.removeClass(\"labelOnBottom\");\r\n\r\n\t\t\t\t\tusrPasswordConfirmInput.addClass(\"inputError\");\r\n\t\t\t\t\tusrPasswordInput.addClass(\"inputError\");\r\n\r\n\t\t\t\t\tusrPasswordInput.val(\"\");\r\n\t\t\t\t\tusrPasswordConfirmInput.val(\"\");\r\n\t\t\t\t\t$(usrPasswordInput).focus();\r\n\t\t\t\t\t$rootScope.endLoading();\r\n\t\t\t\t\tscope.$apply();\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\r\n\t\t\t\t\tvar arrayOfUserData = {\r\n\t\t\t\t\t\tusrLogin:$(registerForm).find(\"#usrLogin\").val(),\r\n\t\t\t\t\t\tusrPassword:$(registerForm).find(\"#usrPassword\").val(),\r\n\t\t\t\t\t\tusrMail:$(registerForm).find(\"#usrMail\").val(),\r\n\t\t\t\t\t\tusrFirstName:$(registerForm).find(\"#usrFirstName\").val(),\r\n\t\t\t\t\t\tusrLastName:$(registerForm).find(\"#usrLastName\").val()\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tAuthenticationClientService.submitRegisterForm(arrayOfUserData, function(message, user){\r\n\t\t\t\t\t\tif(user){\r\n\t\t\t\t\t\t\tAuthenticationClientService.addOrUpdateUserInLocalStorage(user);\r\n\t\t\t\t\t\t\tNotificationClientService.addToSuccessMessages(message);\r\n\t\t\t\t\t\t\t$rootScope.endLoading();\r\n\t\t\t\t\t\t\t$location.url('/');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\tNotificationClientService.addToErrorMessages(message);\r\n\t\t\t\t\t\t\tvar usrLoginInput = $(registerForm).find(\"#usrLogin\");\r\n\t\t\t\t\t\t\tusrLoginInput.focus();\r\n\t\t\t\t\t\t\t$rootScope.endLoading();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n}]);\r\n\r\nagilogClient.directive(\"loginFormDir\", [\"NotificationClientService\", \"AuthenticationClientService\", \"$location\", \"$rootScope\",\r\nfunction(NotificationClientService, AuthenticationClientService, $location, $rootScope){\r\n\treturn function(scope, element) {\r\n\r\n\t\tif($rootScope.root.user){\r\n\t\t\t$location.url(\"/\");\r\n\t\t}\r\n\r\n\t\tvar loginForm = $(element[0]);\r\n\t\tvar usrLoginInput = $(loginForm).find(\"#usrLogin\");\r\n\t\tif(usrLoginInput.val()){\r\n\t\t\tvar usrPasswordInput = $(loginForm).find(\"#usrPassword\");\r\n\t\t\tusrPasswordInput.focus();\r\n\t\t}\r\n\t\telse{\r\n\t\t\tusrLoginInput.focus();\r\n\t\t}\r\n\r\n\t\telement.on(\"submit\", function(){\r\n\t\t\t$rootScope.startLoading();\r\n\r\n\t\t\t$(\".inputError\").removeClass(\"inputError\");\r\n\r\n\t\t\tif(!scope.loginForm.$valid){\r\n\t\t\t\tvar usrMailLabel = $(loginForm).find(\"label[for='usrMail']\");\r\n\t\t\t\tusrMailLabel.text(\"Mail\");\r\n\t\t\t\tvar focusIsSet = false;\r\n\t\t\t\tif(scope.loginForm.usrLogin.$error.required){\r\n\t\t\t\t\tvar usrLoginInput = $(loginForm).find(\"#usrLogin\");\r\n\r\n\t\t\t\t\tusrLoginInput.addClass(\"inputError\");\r\n\t\t\t\t\tfocusIsSet = true;\r\n\t\t\t\t\tusrLoginInput.focus();\r\n\t\t\t\t}\r\n\t\t\t\tif(scope.loginForm.usrPassword.$error.required){\r\n\t\t\t\t\tvar usrPasswordInput = $(loginForm).find(\"#usrPassword\");\r\n\r\n\t\t\t\t\tusrPasswordInput.addClass(\"inputError\");\r\n\t\t\t\t\tif(!focusIsSet){\r\n\t\t\t\t\t\tfocusIsSet = true;\r\n\t\t\t\t\t\tusrPasswordInput.focus();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t$rootScope.endLoading();\r\n\t\t\t}\r\n\t\t\telse{\r\n\r\n\t\t\t\tvar arrayOfUserData = {\r\n\t\t\t\t\tusrLogin:$(loginForm).find(\"#usrLogin\").val(),\r\n\t\t\t\t\tusrPassword:$(loginForm).find(\"#usrPassword\").val()\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tAuthenticationClientService.submitLoginForm(arrayOfUserData, function(message, user){\r\n\t\t\t\t\tif(user){\r\n\t\t\t\t\t\tAuthenticationClientService.addOrUpdateUserInLocalStorage(user);\r\n\t\t\t\t\t\tNotificationClientService.addToSuccessMessages(message);\r\n\t\t\t\t\t\t$rootScope.endLoading();\r\n\t\t\t\t\t\t$location.url('/');\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tNotificationClientService.addToErrorMessages(message);\r\n\t\t\t\t\t\tvar usrLoginInput = $(loginForm).find(\"#usrLogin\");\r\n\t\t\t\t\t\tusrLoginInput.focus();\r\n\t\t\t\t\t\t$rootScope.endLoading();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}]);","agilogClient.service(\"AuthenticationClientService\", ['$localStorage', '$rootScope', \"$http\",\r\nfunction($localStorage, $rootScope, $http){\r\n\r\n\tthis.submitRegisterForm = function(arrayOfUserData, callback){\r\n\t\t$http.post(\"/auth/register\", {\r\n\t\t\tusrLogin:     arrayOfUserData.usrLogin,\r\n\t\t\tusrPassword:  arrayOfUserData.usrPassword,\r\n\t\t\tusrMail:      arrayOfUserData.usrMail,\r\n\t\t\tusrFirstName: arrayOfUserData.usrFirstName,\r\n\t\t\tusrLastName:  arrayOfUserData.usrLastName\r\n\t\t})\r\n\t\t.then(function(response){\r\n\t\t\tcallback(response.data.message, response.data.user);\r\n\t\t});\r\n\t};\r\n\r\n\tthis.submitLoginForm = function(arrayOfUserData, callback){\r\n\t\t$http.post(\"/auth/login\", {\r\n\t\t\tusrLogin:     arrayOfUserData.usrLogin,\r\n\t\t\tusrPassword:  arrayOfUserData.usrPassword\r\n\t\t})\r\n\t\t.then(function(response){\r\n\t\t\tcallback(response.data.message, response.data.user);\r\n\t\t});\r\n\t};\r\n\r\n\tthis.addOrUpdateUserInLocalStorage = function(user){\r\n\t\tif(user){\r\n        \t$localStorage.user = user;\r\n            $rootScope.root.user = $localStorage.user;\r\n        }\r\n\t};\r\n\r\n\tthis.removeUserFromLocalStorage = function(){\r\n        delete $localStorage.user;\r\n        delete $rootScope.root.user;\r\n    };\r\n\r\n    this.logout = function(){\r\n    \treturn $http.get(\"/auth/logout\");\r\n    }\r\n\r\n}]);","﻿/**\r\n * Controlleur stockant les liste de notifications affichées\r\n * @Controller : notificationControllerClient\r\n * @param : NotificationClientService : Service permettant de gérer les notifications\r\n * @param : $scope : Le Scope local du controller\r\n */\r\nagilogClient.controller('NotificationClientController', ['NotificationClientService', '$scope',\r\nfunction(NotificationClientService, $scope) {\r\n    \r\n    // Définition des liste de notification du controller\r\n    $scope.notification = {};\r\n    $scope.notification.errorMessages = [];\r\n    $scope.notification.successMessages = [];\r\n    \r\n    // Ajout d'un listener sur la liste des messages d'erreur du service\r\n    $scope.$watch(function(){\r\n        return NotificationClientService.getErrorMessages();\r\n    },\r\n    function(){\r\n        // Dès que la liste change on met à jour la vue\r\n        $scope.notification.errorMessages = NotificationClientService.getErrorMessages();\r\n    }, true);\r\n    \r\n    // Ajout d'un listener sur la liste des messages success du service\r\n    $scope.$watch(function(){\r\n        return NotificationClientService.getSuccessMessages();\r\n    },\r\n    function(){\r\n        // Dès que la liste change on met à jour la vue\r\n        $scope.notification.successMessages = NotificationClientService.getSuccessMessages();\r\n    }, true);\r\n    \r\n}]);","﻿/**\r\n * Directive relative aux notifications\r\n * @Directive : notificationDirective \r\n */\r\nagilogClient.directive('notificationClientDir', [\r\nfunction(){\r\n    \r\n    return{\r\n        restrict: 'E',  // On applique la directive sur la balise portant son nom\r\n        templateUrl: 'partials/notification.html', // Lien vers le template à appliquer\r\n        controller: 'NotificationClientController' // Controller associé\r\n    }\r\n    \r\n}]);\r\nagilogClient.directive('currentNotifDir', [\r\nfunction(){\r\n    \r\n    return function(scope, notification) {\r\n    \t$(notification).on(\"click\", function(){\r\n    \t\t$(this).hide();\r\n    \t});\r\n    }\r\n    \r\n}]);","﻿/**\r\n * Service offrant les méthodes de manipulation des liste de notifications\r\n * @Service : notificationServiceClient\r\n * @param : $timeout : Module externe permettant de manipuler le local-storage\r\n */\r\nagilogClient.service('NotificationClientService', ['$timeout', function($timeout) {\r\n    \r\n    // Liste des messages d'erreur\r\n    var errorMessages = [];\r\n    \r\n    // Liste des message success\r\n    var successMessages = [];\r\n    \r\n    /**\r\n     * Retourne la liste des message d'erreur\r\n     */\r\n    this.getErrorMessages = function(){\r\n        return errorMessages;\r\n    };\r\n    \r\n    /**\r\n     * Retourne la liste des message success\r\n     */\r\n    this.getSuccessMessages = function(){\r\n        return successMessages;\r\n    };\r\n    \r\n    /**\r\n     * Méthode permettant d'ajouter une nouvelle notification en erreur,\r\n     * ajoute un timer relatif à ce message qui le fera disparaitre\r\n     * au bout de 9scd\r\n     * @param : error : Le message à ajouter\r\n     */\r\n    this.addToErrorMessages = function(error){\r\n        if(error && !angular.equals(error, '')){\r\n\r\n            for(var i = 0; i<errorMessages.length; i++){\r\n                if(errorMessages[i][0] === error){\r\n                    $timeout.cancel(errorMessages[i][1]);\r\n                    errorMessages.splice(i,1);\r\n                }\r\n            }\r\n\r\n            var currentError = [];\r\n            currentError.push(error);\r\n            var timeout = $timeout(function(){\r\n                for(var i = 0; i<errorMessages.length; i++){\r\n                    if(errorMessages[i][0] === error){\r\n                        errorMessages.splice(i,1);\r\n                    }\r\n                }\r\n            },9000);\r\n            currentError.push(timeout);\r\n            errorMessages.push(currentError);\r\n        }\r\n    };\r\n    \r\n    /**\r\n     * Méthode permettant d'ajouter une nouvelle notification en succès,\r\n     * ajoute un timer relatif à ce message qui le fera disparaitre\r\n     * au bout de 9scd\r\n     * @param : message : Le message à ajouter\r\n     */\r\n    this.addToSuccessMessages = function(message){\r\n        if(message && !angular.equals(message, '')){\r\n\r\n            for(var i = 0; i<successMessages.length; i++){\r\n                if(successMessages[i][0] === message){\r\n                    $timeout.cancel(successMessages[i][1]);\r\n                    successMessages.splice(i,1);\r\n                }\r\n            }\r\n\r\n            var currentSuccess = [];\r\n            currentSuccess.push(message);\r\n            var timeout = $timeout(function(){\r\n                for(var i = 0; i<successMessages.length; i++){\r\n                    if(successMessages[i][0] === message){\r\n                        successMessages.splice(i,1);\r\n                    }\r\n                }\r\n            },9000);\r\n            currentSuccess.push(timeout);\r\n            successMessages.push(currentSuccess);\r\n        }\r\n    };\r\n    \r\n    /**\r\n     * Méthode permettant de vider la liste de message d'erreur\r\n     * et annuler les timeout en cours sur ces messages\r\n     */\r\n    this.removeAllErrorMessages = function(){\r\n        for(var i = 0; i<errorMessages.length; i++){\r\n            $timeout.cancel(errorMessages[i][1]);\r\n        }\r\n        errorMessages = [];\r\n    };\r\n    \r\n    /**\r\n     * Méthode permettant de vider la liste de message en succès\r\n     * et annuler les timeout en cours sur ces messages\r\n     */\r\n    this.removeAllSuccessMessages = function(){\r\n        for(var i = 0; i<successMessages.length; i++){\r\n            $timeout.cancel(successMessages[i][1]);\r\n        }\r\n        successMessages = [];\r\n    };\r\n    \r\n}]);","/**\r\n * @Type        : Directive\r\n * @Name        : menuIcoDir\r\n * @Usage       : <balise menu-ico-dir></balise>\r\n * @Param       : function() : Le corps de la directive\r\n * @Description : Cette directive gère côté les JS les événements \r\n *                utilisateur liés aux éléments du menu\r\n */\r\nagilogClient.directive(\"menuIcoDir\", [function(){\r\n\t/**\r\n\t * @Type  : function\r\n\t * @Param : scope   : Le scope de la directive\r\n\t * @Param : element : L'élément HTML contenant la directive\r\n\t */\r\n\treturn function(scope, element){\r\n\r\n\t\t// Récupération dans une variable jQuery de l'élément HTML courant\r\n\t\tvar menuIco = $(element[0]);\r\n\t\t// Récupération dans une variable du sous menu de l'élément HTML courant\r\n\t\tvar hiddenMenuItems = $(menuIco).find(\"#hiddenMenuItems\");\r\n\r\n\t\t// Lorsque l'utilisateur survol l'élément\r\n\t\tmenuIco.on(\"mouseenter\", function(){\r\n\t\t\t// On ajoute la classe isHover dont l'animation\r\n\t\t\t// est géré côté CSS\r\n\t\t\tmenuIco.addClass(\"isHover\");\r\n\t\t\t// On supprime la classe hideDataTitle qui\r\n\t\t\t// cache le tooltip de l'élément\r\n\t\t\tmenuIco.removeClass(\"hideDataTitle\");\r\n\t\t});\r\n\t\t// Lorsque l'utilisateur ne survol plus l'élément\r\n\t\tmenuIco.on(\"mouseleave\", function(){\r\n\t\t\t// On supprime la classe isHover ce qui retire le style \"survolé\"\r\n\t\t\tmenuIco.removeClass(\"isHover\");\r\n\t\t\t// On supprime la classe hideDataTitle\r\n\t\t\tmenuIco.removeClass(\"hideDataTitle\");\r\n\t\t\t// On supprime la classe active du sous menu ce qui\r\n\t\t\t// le cache\r\n\t\t\thiddenMenuItems.removeClass(\"active\");\r\n\t\t});\r\n\t\t// Lorsque l'utilisateur click sur l'élément\r\n\t\tmenuIco.on(\"click\", function(){\r\n\t\t\t// On ajoute la classe hideDataTitle qui permet de cacher\r\n\t\t\t// le tooltip\r\n\t\t\tmenuIco.addClass(\"hideDataTitle\");\r\n\t\t\t// Calcul de la position du sous menu à afficher\r\n\t\t\tvar topPosition = $(hiddenMenuItems).height();\r\n\t\t\t// Le sous menu possède : \r\n\t\t\t// - Un padding de 5px\r\n\t\t\t// - Un border de 5px\r\n\t\t\t// Soit un rajout de 10px en haut et en bas du cadre\r\n\t\t\ttopPosition += 20;\r\n\t\t\t// On affecte la position du sous menu\r\n\t\t\t$(hiddenMenuItems).css({top:'-'+topPosition+'px'});\r\n\t\t\t// Et on lui ajoute la classe active pour l'afficher\r\n\t\t\thiddenMenuItems.addClass(\"active\");\r\n\t\t});\r\n\t}\r\n}]);\r\n\r\n/**\r\n * @Type        : Directive\r\n * @Name        : inputText\r\n * @Usage       : <balise input-text></balise>\r\n * @Param       : function() : Le corps de la directive\r\n * @Description : Cette directive gère côté les JS les événements \r\n *                utilisateur liés aux champs formulaire\r\n */\r\nagilogClient.directive(\"inputText\", [function(){\r\n\treturn function(scope, element){\r\n\r\n\t\t// Récupération dans une variable jQuery du champ courant\r\n\t\tvar input = $(element[0]);\r\n\t\t// Récupération dans une variable jQuery du label associé au champ\r\n\t\tvar label = $(input.siblings()[0]);\r\n\r\n\t\t// Lorsque l'utilisateur cible le champ\r\n\t\tinput.on(\"focus\", function(){\r\n\t\t\t// Si le champ ne contient aucune valeur on ajoute à son label\r\n\t\t\t// la classe moveLabelToBottom qui anime en CSS le label\r\n\t\t\t// en le déplacant vers le bas\r\n\t\t\tif(!$(input).val()){\r\n\t\t\t\tlabel.addClass(\"moveLabelToBottom\");\r\n\t\t\t}\r\n\t\t\t// Si le champ contient déjà une valeur alors on n'anime pas le label\r\n\t\t});\r\n\t\t// Lorsque l'utilisateur quitte le champ\r\n\t\tinput.on(\"focusout\", function(){\r\n\t\t\t// Si le champ contient une valeur\r\n\t\t\tif($(input).val()){\r\n\t\t\t\t// On ajoute à son label la classe labelOnBottom\r\n\t\t\t\t// qui permet de le maintenir en bas\r\n\t\t\t\tlabel.addClass(\"labelOnBottom\");\r\n\t\t\t}\r\n\t\t\t// Si le champ ne contient pas de valeur\r\n\t\t\telse{\r\n\t\t\t\t// On retire la classe labelOnBottom pour repositionner\r\n\t\t\t\t// le label à son emplacement d'origine\r\n\t\t\t\tlabel.removeClass(\"labelOnBottom\");\r\n\t\t\t}\r\n\t\t\t// Quelque soit la saisie on supprime la classe liée \r\n\t\t\t// à l'animation du label\r\n\t\t\tlabel.removeClass(\"moveLabelToBottom\");\r\n\t\t});\r\n\t}\r\n}]);","agilogClient.controller(\"RootClientController\", ['$rootScope', function($rootScope){\r\n\r\n\t/**\r\n     * Méthode permettant d'afficher la fenêtre de Loading\r\n     */\r\n    $rootScope.startLoading = function(){\r\n        $rootScope.root.loading = true;\r\n        $rootScope.root.loadingQueue++;\r\n    };\r\n\r\n    /**\r\n     * Méthode permettant de cacher la fenêtre de Loading\r\n     */\r\n    $rootScope.endLoading = function(){\r\n        $rootScope.root.loadingQueue--;\r\n        // On prévient les mauvais appel à la fonction\r\n        if($rootScope.root.loadingQueue < 0){\r\n            $rootScope.root.loadingQueue = 0;\r\n        }\r\n        if($rootScope.root.loadingQueue == 0) {\r\n            $rootScope.root.loading = false;\r\n        }\r\n    };\r\n\r\n}]);"]}